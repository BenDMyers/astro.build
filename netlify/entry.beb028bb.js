import"./chunks/chunk.3541df1e.js";import"./chunks/chunk.dc0320a5.js";import"./chunks/chunk.a1fb0462.js";class n extends HTMLElement{#e;connectedCallback(){"IntersectionObserver"in window&&(this.visible=!1,this.#e=new IntersectionObserver(([e])=>{this.visible=e.isIntersecting}),this.#e.observe(this)),this.checkbox.addEventListener("change",this.onCheckboxChanged.bind(this)),window.localStorage.getItem("astro:marquee-paused")==="false"&&requestAnimationFrame(()=>this.checkbox.checked=!1)}set visible(e){requestAnimationFrame(()=>{this.setAttribute("visible",`${e}`)})}get checkbox(){return this.querySelector("#marquee-pause")}onCheckboxChanged(){const e=this.checkbox.checked;window.localStorage.setItem("astro:marquee-paused",`${e}`)}onCheckboxKeydown(e){const{key:t}=e;t==="Enter"&&this.onCheckboxChanged()}}customElements.define("not-marquee",n);class o extends HTMLElement{#e=void 0;#t;constructor(){super(),this.#e=new Promise(e=>{this.#t=()=>e(!0)})}connectedCallback(){const e=Promise.all(this.getAnimations({subtree:!0}).map(t=>t.finished)).then(()=>new Promise(t=>setTimeout(()=>t(!1),3500)));Promise.race([this.#e,e]).then(t=>{t||requestAnimationFrame(()=>{const i=this.cloneNode(!0);this.replaceWith(i)})})}disconnectedCallback(){this.#t()}}customElements.get("demo-illustration")||customElements.define("demo-illustration",o);
